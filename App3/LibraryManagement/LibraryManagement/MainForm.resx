<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>